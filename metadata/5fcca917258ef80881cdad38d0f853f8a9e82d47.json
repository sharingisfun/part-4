{"title":"The Little Schemer series by Daniel P. Friedman","uid":9629430,"size":15688313,"categoryP":"other","categoryS":"e_books","magnet":"?xt=urn:btih:5fcca917258ef80881cdad38d0f853f8a9e82d47&amp;dn=The+Little+Schemer+series+by+Daniel+P.+Friedman&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":9,"leechers":1,"uploader":"PirateBook","files":3,"time":1392651242,"description":"\nDaniel P. Friedman is Professor of Computer Science at Indiana University and is the author of many books published by the MIT Press, including The Little Schemer (fourth edition, 1995), The Seasoned Schemer (1995), A Little Java, A Few Patterns (1997), each of these coauthored with Matthias Felleisen, and The Reasoned Schemer (2005), coauthored with William E. Byrd and Oleg Kiselyov.\n\nMatthias Felleisen grew up in Germany and came to the United States at the age of 21.\n\nIn 1987, he received his doctorate from Daniel P. Friedman, with whom he had also rewritten The Little Lisper, his first book. At this point, The Little Lisper has been in print for nearly 35 years, an incredible age in the fast-lived world of programming and programming languages. \n\nThe book covers the fundamental topic of recursive programming in an entertaining dialog style. While the book summarizes the high level ideas as a collection of ten commandments, the reader must work through the material and formulate lessons on his or her own.\n\nFelleisen and his wife now live in Maine and Massachusetts. He teaches at Northeastern University in Boston and continues to conduct research in programming languages and train PhD students in this central field of computer science.\n\nWilliam E. Byrd is a PhD candidate in Computer Science at Indiana University.\n\nOleg Kiselyov is a computer scientist from Monterey, California.\n\nGenre: Computers &amp; Technology, Programming, Languages &amp; Tools, Lisp\n\n\nThe Little Schemer (4th Ed)\n\nThis delightful book leads you through the basic elements of programming in Scheme (a Lisp dialect) via a series of dialogues with well-chosen questions and exercises. Besides teaching Scheme, The Little Schemer teaches the reader how to think about computation. The authors focus on ten essential concepts of thinking about how to compute and demonstrate how to apply these concepts in inventive ways. The Little Schemer is an excellent book both for the beginner and for the seasoned programmer.\n\nThe Seasoned Schemer\n\nThe notion that &quot;thinking about computing is one of the most exciting things the human mind can do&quot; sets both The Little Schemer (formerly known as The Little LISPer) and its new companion volume, The Seasoned Schemer, apart from other books on LISP. The authors' enthusiasm for their subject is compelling as they present abstract concepts in a humorous and easy-to-grasp fashion. Together, these books will open new doors of thought to anyone who wants to find out what computing is really about.\n\nThe Little Schemer introduces computing as an extension of arithmetic and algebra -- things that everyone studies in grade school and high school. It introduces programs as recursive functions and briefly discusses the limits of what computers can do. The authors use the programming language Scheme, and interesting foods to illustrate these abstract ideas. The Seasoned Schemer informs the reader about additional dimensions of computing: functions as values, change of state, and exceptional cases.\n\nThe Little LISPer has been a popular introduction to LISP for many years. It had appeared in French and Japanese. The Little Schemer and The Seasoned Schemer are worthy successors and will prove equally popular as textbooks for Scheme courses as well as companion texts for any complete introductory course in Computer Science.\n\nThe Reasoned Schemer\n\nThe goal of The Reasoned Schemer is to help the functional programmer think logically and the logic programmer think functionally. The authors of The Reasoned Schemer believe that logic programming is a natural extension of functional programming, and they demonstrate this by extending the functional language Scheme with logical constructs -- thereby combining the benefits of both styles. \n\nThe extension encapsulates most of the ideas in the logic programming language Prolog.The pedagogical method of The Reasoned Schemer is a series of questions and answers, which proceed with the characteristic humor that marked The Little Schemer and The Seasoned Schmer. Familiarity with a functional language or with the first eight chapters of The Little Schemer is assumed. \n\nAdding logic capabilities required the introduction of new forms. The authors' goal is to show to what extent writing logic programs is the same as writing functional programs using these forms. In this way, the reader of The Reasoned Schemer will come to understand how simple logic programming is and how easy it is to define functions that behave like relations.","torrent":{"xt":"urn:btih:5fcca917258ef80881cdad38d0f853f8a9e82d47","amp;dn":"The+Little+Schemer+series+by+Daniel+P.+Friedman","amp;tr":["udp%3A%2F%2Ftracker.openbittorrent.com%3A80","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"5fcca917258ef80881cdad38d0f853f8a9e82d47","infoHashBuffer":{"type":"Buffer","data":[95,204,169,23,37,142,248,8,129,205,173,56,208,248,83,248,169,232,45,71]},"announce":[],"urlList":[]}}